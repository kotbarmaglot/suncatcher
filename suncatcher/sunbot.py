from .config import API_KEY, API_KEY2 
from .vksunbot import get_moon, get_moon_amount, create_catalog_file
from .db import update_table_user, get_amount_suncatcher, get_url_suncatcher, get_suncather_catalog, update_current_state, get_current_state, get_user, insert_table_suncatcher, update_step_order, update_table_press_start, create_table_press_start, get_table_press_start, update_user_path, get_user_path, create_table_user_path, get_user_path, create_table_current_state, update_order, get_order, create_table_all, insert_table_suncatcher_photo, create_table_user, get_table
import telebot
import json
from telebot import types
import pathlib
from pathlib import Path
import os
import sys
from pprint import pprint
import datetime


bot = telebot.TeleBot(API_KEY2)

table = ['user','suncatcher', 'suncatcher_photo', 'press_start', 'current_state', 'user_path', 'order', 'step_order']

admin = [257930228, 1820161475]


def update_patch():
    fds = sorted(os.listdir('suncatcher/user_file/'))

    for js in fds:
        with open(f'suncatcher/user_file/{js}') as f:
            user = json.load(f)

            try:
                bot.delete_message(user['id'], user['id_mes'])
            except:
                print('oops1')

            for elem in user['id_media']:
                try:
                    bot.delete_message(user['id'], elem)
                except:
                    print('oops2')

            bot.send_message(user['id'], text=f'–í —á–∞—Ç-–±–æ—Ç–µ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –≤–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞. \n\n–ù–∞–∂–º–∏—Ç–µ /start')

        os.remove(f'suncatcher/user_file/{js}')
        print(f'—É–¥–∞–ª–µ–Ω–æ-{js}')
                

def delete_message(message, type):
    if type == 'media_and_text':
        current_data = get_current_state(message.from_user.id)
        current_message_id_text = current_data[6]
        current_message_id_media = current_data[5].split(',')

        for elem in current_message_id_media:
            bot.delete_message(message.from_user.id, elem)

        bot.delete_message(message.from_user.id, current_message_id_text)
    
    if type == 'photo':
        current_data = get_current_state(message.from_user.id)
        current_message_id_photo = current_data[4]

        bot.delete_message(message.from_user.id, current_message_id_photo)


def show_catalog(message, step_pre=0):

    insert_table_suncatcher()
    insert_table_suncatcher_photo()

    title = 'üåà –ö–∞–∫–∏–µ –ª–æ–≤—Ü—ã —Å–æ–ª–Ω—Ü–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å:\n\n'
    big_sun = '‚òÄÔ∏è‚òÄÔ∏è‚òÄÔ∏è <b>–ë–æ–ª—å—à–∏–µ –ª–æ–≤—Ü—ã </b> - –æ–±—â–µ–π –¥–ª–∏–Ω–æ–π 40 —Å–º –∏ –±–æ–ª—å—à–µ. C—Ç–æ–∏–º–æ—Å—Ç—å - 4000—Ä.\n\n'
    mid_sun = '‚òÄÔ∏è‚òÄÔ∏è <b>–°—Ä–µ–¥–Ω–∏–µ –ª–æ–≤—Ü—ã</b> ~ 30 —Å–º. C—Ç–æ–∏–º–æ—Å—Ç—å - 3000—Ä.\n\n'
    low_sun = '‚òÄÔ∏è <b>–ú–∞–ª—ã–µ –ª–æ–≤—Ü—ã</b> ~ 20 —Å–º. C—Ç–æ–∏–º–æ—Å—Ç—å - 2000—Ä.\n\n'

    text = f"{title}{big_sun}{mid_sun}{low_sun}"

    markup_inline = types.InlineKeyboardMarkup()
    item1 = types.InlineKeyboardButton("‚òÄÔ∏è‚òÄÔ∏è‚òÄÔ∏è –ë–æ–ª—å—à–∏–µ ‚òÄÔ∏è‚òÄÔ∏è‚òÄÔ∏è", callback_data='big')
    item2 = types.InlineKeyboardButton("‚òÄÔ∏è‚òÄÔ∏è –°—Ä–µ–¥–Ω–∏–µ ‚òÄÔ∏è‚òÄÔ∏è", callback_data='mid')
    item3 = types.InlineKeyboardButton("‚òÄÔ∏è –ú–∞–ª—ã–µ ‚òÄÔ∏è", callback_data='low')

    url_photo = 'https://sun9-42.userapi.com/impg/V7H81niHXYdgP2M_ZqbL4lRvuwGQGajdTvkdYw/KqT-wWKWTHw.jpg?size=2560x2560&quality=95&sign=79eab711010666d1651f6001fdf322d9&type=album'

    markup_inline.add(item1)
    markup_inline.add(item2)
    markup_inline.add(item3)

    if step_pre == 'media':
        msg = bot.send_photo(message.from_user.id, url_photo, caption=text, reply_markup=markup_inline, parse_mode='HTML')
        delete_message(message, type='media_and_text')
        update_current_state(msg, type='start')
    else:
        current_data = get_current_state(message.from_user.id)
        current_message_id = current_data[4]

        bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id, media=types.InputMediaPhoto(url_photo, caption=text, parse_mode='HTML'), reply_markup=markup_inline)


def show_choose_size_suncatcher_db(message, size, step_pre=0):
    catalog = get_suncather_catalog(size)
    current_data = get_current_state(message.from_user.id)

    current_number_sun = current_data[1]
    current_message_id = current_data[4]

    current_sun_id = catalog[current_number_sun][0]
    current_sun_title = catalog[current_number_sun][1]
    current_sun_desc = catalog[current_number_sun][2]
    current_sun_price = catalog[current_number_sun][3]
    current_sun_cat = catalog[current_number_sun][4]
    available_sun = catalog[current_number_sun][4]

    amount_sun = len(catalog)

    current_url_sun = get_url_suncatcher(current_sun_id)

    callback_data_back = 'back'
    callback_data_next = 'next'

    if current_number_sun+1 == amount_sun:
        callback_data_next = 'none'

    if current_number_sun+1 == 1:
        callback_data_back = 'none'

    markup_inline = types.InlineKeyboardMarkup()

    # if message.from_user.id == 257930228:
    #     item7 = types.InlineKeyboardButton(text='–ü—Ä–æ–¥–∞–Ω–æ', callback_data='sell_suncatcher')
    #     markup_inline.add(item7)

    # item9 = types.InlineKeyboardButton(text=f'{current_sun_title}', callback_data='none')
    item10 = types.InlineKeyboardButton(text=f'üí∞ –¶–µ–Ω–∞ - {current_sun_price[0:4]}—Ä', callback_data='none')
    item = types.InlineKeyboardButton(text='üí´ –û–ø–∏—Å–∞–Ω–∏–µ/–§–æ—Ç–æ', callback_data='more')
    item2 = types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data=callback_data_back)
    item3 = types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data=callback_data_next)
    item6 = types.InlineKeyboardButton(text=f'üéÅ –ó–∞–∫–∞–∑–∞—Ç—å ({current_sun_price[0:4]}—Ä)', callback_data='choose')
    item4 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')
    item5 = types.InlineKeyboardButton(text=f'{current_number_sun+1}/{amount_sun}', callback_data='none')

    # markup_inline.add(item9)
    markup_inline.add(item2, item5, item3)
    markup_inline.add(item6)
    markup_inline.add(item,item4)
    # markup_inline.add(item10, item6)

    if step_pre == 'media':
        msg = bot.send_photo(message.from_user.id, current_url_sun[0][0], reply_markup=markup_inline, parse_mode='HTML')
        delete_message(message, type='media_and_text')
        update_current_state(msg, type='back1', sun_id=current_sun_id)

    else:
        msg = bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id, media=types.InputMediaPhoto(current_url_sun[0][0]), reply_markup=markup_inline)
        update_current_state(msg, type='back1', sun_id=current_sun_id)


def show_choose_size_suncatcher_db_more(message, size):
    catalog = get_suncather_catalog(size)
    current_data = get_current_state(message.from_user.id)

    current_number_sun = current_data[1]
    current_message_id = current_data[4]

    current_sun_id = catalog[current_number_sun][0]
    current_sun_title = catalog[current_number_sun][1]
    current_sun_desc = catalog[current_number_sun][2].replace('"–≤—ã–±—Ä–∞—Ç—å" ‚¨áÔ∏è —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å', 'üéÅ <b>–ó–∞–∫–∞–∑–∞—Ç—å</b>')
    current_sun_price = catalog[current_number_sun][3]
    current_sun_cat = catalog[current_number_sun][4]

    amount_sun = len(catalog)

    current_url_sun = get_url_suncatcher(current_sun_id)

    update_user_path(message, catalog=current_sun_cat, suncatcher_id=current_sun_id)

    media = []

    for url in current_url_sun:
        media.append(types.InputMediaPhoto(url[0]))

    msg_med = bot.send_media_group(message.from_user.id, media)

    markup_inline = types.InlineKeyboardMarkup()

    # item = types.InlineKeyboardButton(text='üéÅ –ó–∞–∫–∞–∑–∞—Ç—å', callback_data='choose1')
    item = types.InlineKeyboardButton(text=f'üéÅ –ó–∞–∫–∞–∑–∞—Ç—å ({current_sun_price[0:4]}—Ä)', callback_data='choose1')
    item2 = types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='back1')
    item4 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog1')

    markup_inline.add(item)
    markup_inline.add(item2, item4)

    msg = bot.send_message(message.from_user.id, text=f'üåà‚òÄÔ∏è {current_sun_desc}', reply_markup=markup_inline, parse_mode='HTML')

    delete_message(message, type='photo')

    update_current_state(msg_med, type='media', sun_id=current_sun_id)
    update_current_state(msg, type='text', sun_id=current_sun_id)

    
def choose(message, size, step_pre=0):
    catalog = get_suncather_catalog(size)
    current_data = get_current_state(message.from_user.id)

    current_number_sun = current_data[1]
    current_sun_title = catalog[current_number_sun][1]
    current_sun_price = catalog[current_number_sun][3]
    current_message_id = current_data[4]
    current_sun_id = catalog[current_number_sun][0]
    current_url_sun = get_url_suncatcher(current_sun_id)

    text = f'üëç –î–ª—è –∑–∞–∫–∞–∑–∞ <b>{current_sun_title}</b> –Ω–∞–∂–º–∏—Ç–µ: \n\n‚úçÔ∏è <b>–ù–∞–ø–∏—Å–∞—Ç—å</b> - —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–∞—Å—Ç–µ—Ä–æ–º –∏ –ª–∏—á–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏.\n\nüéÅ <b>–ó–∞–∫–∞–∑–∞—Ç—å</b> - —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –∑–∞–∫–∞–∑–∞ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ.'

    markup_inline = types.InlineKeyboardMarkup()

    item = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å', url='https://t.me/Lunar_room')
    item2 = types.InlineKeyboardButton(text=f'üéÅ –ó–∞–∫–∞–∑–∞—Ç—å ({current_sun_price[0:4]}—Ä)', callback_data='orderbot')
    # item2 = types.InlineKeyboardButton(text='üéÅ –ó–∞–∫–∞–∑–∞—Ç—å', callback_data='orderbot')
    item3 = types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='back2')
    item4 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')

    markup_inline.add(item2)
    markup_inline.add(item)
    markup_inline.add(item3, item4)

    if step_pre == 'media':
        msg = bot.send_photo(message.from_user.id, current_url_sun[0][0], caption=text, reply_markup=markup_inline, parse_mode='HTML')
        delete_message(message, type='media_and_text')
        update_current_state(msg, type='back1', sun_id=current_sun_id)
    else:
        bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id, media=types.InputMediaPhoto(current_url_sun[0][0], caption=text, parse_mode='HTML'), reply_markup=markup_inline)


def step_adress(message):
    current = get_current_state(message.from_user.id)
    order_sun_via_bot(message, step='details_pay', size=current[2])
    bot.delete_message(message.chat.id, message.message_id)


def order_sun_via_bot(message, step, size):
    catalog = get_suncather_catalog(size)
    current_data = get_current_state(message.from_user.id)

    order = {}

    user = get_user(message.from_user.id)

    id_user, name_user, surname_user, nickname_user, adress_user = user[0]

    user_full = f'id: {id_user} \n–ò–º—è: {name_user} \n–§–∞–º–∏–ª–∏—è: {surname_user} \n–ù–∏–∫: @{nickname_user} \n–ê–¥—Ä–µ—Å: {adress_user} \n\n'

    current_number_sun = current_data[1]
    current_message_id = current_data[4]
    current_message_admin_id = current_data[7]
    
    current_sun_id = catalog[current_number_sun][0]
    current_sun_title = catalog[current_number_sun][1]
    current_url_sun = get_url_suncatcher(current_sun_id)
    current_sun_price = catalog[current_number_sun][3]

    order['order_user_id'] = id_user
    order['date'] = str(datetime.datetime.now())[0:19]
    order['suncatcher_id'] = current_sun_id
    order['payment_status'] = 'none'
    order['track_number'] = 'none'
    order['delivered_status'] = 'none'
    order['step_order'] = 'none'

    if current_sun_title == 'big' or 'mid':
        cost_ship = '350 —Ä—É–±–ª–µ–π'
        size_sun = '–±–æ–ª—å—à–∏—Ö –∏ —Å—Ä–µ–¥–Ω–∏—Ö'
    else:
        cost_ship = '300 —Ä—É–±–ª–µ–π'
        size_sun = '–º–∞–ª—ã—Ö'

    if step == 'orderbot':
        order['step_order'] = 'step1'

        update_order(order)

        script_one_step = f'‚òÄÔ∏è <b>{current_sun_title}</b> –≤ –Ω–∞–ª–∏—á–∏–∏. \n\nüí∞<b>–°—Ç–æ–∏–º–æ—Å—Ç—å</b> - {current_sun_price[0:4]} —Ä—É–±–ª–µ–π. \n\n<b>‚úÖ –í—ã –¥–ª—è —Å–µ–±—è –µ–≥–æ –≤—ã–±—Ä–∞–ª–∏ –∏–ª–∏ –≤ –ø–æ–¥–∞—Ä–æ–∫?</b> '

        markup_inline = types.InlineKeyboardMarkup()

        item = types.InlineKeyboardButton(text='üíÅ‚Äç‚ôÄÔ∏è –î–ª—è —Å–µ–±—è', callback_data='forme')
        item2 = types.InlineKeyboardButton(text='üéÅ –í –ø–æ–¥–∞—Ä–æ–∫', callback_data='forgift')
        item3 = types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='back2')
        item4 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')
        item5 = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É', url='https://t.me/Lunar_room')

        markup_inline.add(item, item2)
        markup_inline.add(item3, item4)
        markup_inline.add(item5)

        bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id,  media=types.InputMediaPhoto(current_url_sun[0][0], caption=script_one_step, parse_mode='HTML'), reply_markup=markup_inline)

        description = f'–ü–æ–ª—å–∑–æ–≤—Ç–µ–ª—å: \n\n{user_full}–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è {current_sun_title} –∏ –∏–∑—ä—è–≤–∏–ª –∂–µ–ª–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞—Ç—å –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
        msg_admin_id = bot.send_photo(-1001976282334, current_url_sun[0][0], caption=description)

        update_current_state(message, type='order', message_admin_id=msg_admin_id.message_id)

    if step == 'forme':
        order['step_order'] = 'step2'

        update_order(order)

        # update_step_order(step2=step)

        script_one_step = f'üöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–æ–≥–æ –∫—Ä–∞—è {size_sun} –ª–æ–≤—Ü–æ–≤ —Å—Ç–æ–∏—Ç {cost_ship}. \n\nüì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏ –≤ –¥–µ–Ω—å –∑–∞–∫–∞–∑–∞, –ª–∏–±–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å. \n\nüí≥ –û–ø–ª–∞—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫ –∏–ª–∏ –¢–∏–Ω—å–∫–æ—Ñ. \n\n<b>‚úÖ –í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç?</b>'

        markup_inline = types.InlineKeyboardMarkup()

        item = types.InlineKeyboardButton(text='‚úÖ –î–∞', callback_data='input_adress')
        item2 = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–µ—Ç. –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É', url='https://t.me/Lunar_room')
        item3 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')

        markup_inline.add(item, item2)
        markup_inline.add(item3)

        bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id,  media=types.InputMediaPhoto(current_url_sun[0][0], caption=script_one_step, parse_mode='HTML'), reply_markup=markup_inline)

        description = f'–ü–æ–ª—å–∑–æ–≤—Ç–µ–ª—å: \n\n{user_full}–í—ã–±—Ä–∞–ª {current_sun_title} –¥–ª—è —Å–µ–±—è'

        bot.edit_message_media(chat_id=-1001976282334, message_id=current_message_admin_id, media=types.InputMediaPhoto(current_url_sun[0][0], caption=description, parse_mode='HTML'))

    if step == 'forgift':
        order['step_order'] = 'step2'

        update_order(order)

        # update_step_order(step2=step)

        script_one_step = f'üéÅ <b>{current_sun_title}</b> –ø—Ä–∏–¥—ë—Ç –∫ –≤–∞–º –≤ –ø–æ–¥–∞—Ä–æ—á–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ. –ö –∑–∞–∫–∞–∑—É —è –ø—Ä–∏–ª–æ–∂—É –æ—Ç–∫—Ä—ã—Ç–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–∞–º–∏ —Å–º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å. –ò –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∫ –≤—Ä—É—á–µ–Ω–∏—é)\n\nüöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–æ–≥–æ –∫—Ä–∞—è {size_sun} –ª–æ–≤—Ü–æ–≤ —Å—Ç–æ–∏—Ç {cost_ship}. \n\nüì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏ –≤ –¥–µ–Ω—å –∑–∞–∫–∞–∑–∞, –ª–∏–±–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å. \n\nüí≥ –û–ø–ª–∞—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫ –∏–ª–∏ –¢–∏–Ω—å–∫–æ—Ñ. \n\n<b>‚úÖ –í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç?</b>'

        markup_inline = types.InlineKeyboardMarkup()

        item = types.InlineKeyboardButton(text='‚úÖ –î–∞', callback_data='input_adress')
        item2 = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–µ—Ç. –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É', url='https://t.me/Lunar_room')
        item3 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')

        markup_inline.add(item, item2)
        markup_inline.add(item3)

        bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id,  media=types.InputMediaPhoto(current_url_sun[0][0], caption=script_one_step, parse_mode='HTML'), reply_markup=markup_inline)

        description = f'–ü–æ–ª—å–∑–æ–≤—Ç–µ–ª—å: \n\n{user_full}–í—ã–±—Ä–∞–ª {current_sun_title} –≤ –ø–æ–¥–∞—Ä–æ–∫'

        bot.edit_message_media(chat_id=-1001976282334, message_id=current_message_admin_id, media=types.InputMediaPhoto(current_url_sun[0][0], caption=description, parse_mode='HTML'))

        # bot.send_photo(-1001976282334, current_url_sun[0][0], caption=description)

    if step == 'input_adress':

        order['step_order'] = 'step3'

        update_order(order)

        script_one_step = '<b>‚úÖ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∞—Ç-–±–æ—Ç—É –∞–¥—Ä–µ—Å, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–∏—Ç—å, –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b> \n\n–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, ‚Ññ –¥–æ–º–∞, ‚Ññ –∫–≤–∞—Ä—Ç–∏—Ä—ã, –§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è, –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è. \n\nüëâ –ü—Ä–æ—Å—Ç–æ –Ω–∞–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ:'
        
        markup_inline = types.InlineKeyboardMarkup()

        item = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')
        item2 = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É', url='https://t.me/Lunar_room')

        markup_inline.add(item, item2)

        msg = bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id,  media=types.InputMediaPhoto(current_url_sun[0][0], caption=script_one_step, parse_mode='HTML'), reply_markup=markup_inline)

        bot.register_next_step_handler(msg, step_adress)

    if step == 'details_pay':

        order['step_order'] = 'step4'

        update_order(order)

        finish_cost = int(current_sun_price[0:4]) + int(cost_ship[0:3])
        adress = message.json['text']

        # update_step_order(step3=adress)
        update_table_user(message, adress=adress)

        details_pay = f'üëç –û—Ç–ª–∏—á–Ω–æ. –ü–æ—á—Ç–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏!\n\nüöö –î–æ—Å—Ç–∞–≤–∫–∞ <b>{current_sun_title}</b> - {cost_ship} + —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≤—Ü–∞ —Å–æ–ª–Ω—Ü–∞ - {current_sun_price[0:4]}—Ä.\n\n<b>–ò—Ç–æ–≥–æ</b> - {finish_cost} —Ä—É–±–ª–µ–π. \n\nüí≥ –û–ø–ª–∞—Ç—É –º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ –∏–ª–∏ –°–±–µ—Ä–±–∞–Ω–∫:\n\n–ü–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <b>89180119741</b> \n\n–ü–æ–ª—É—á–∞—Ç–µ–ª—å: <b>–û–∫—Å–∞–Ω–∞ –ù–∏–∫–æ–ª–∞–µ–≤–Ω–∞ –ò.</b>\n\n'
        script_one_step =  f'{details_pay}üì¨ –í–∞—à –∞–¥—Ä–µ—Å:\n\n <b>{adress}</b> \n\n‚úÖ –ï—Å–ª–∏ –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –æ–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –æ–ø–ª–∞—Ç–∏–ª(a). –í —Ç–µ—á–µ–Ω–∏–∏ –ø–æ–ª—É—á–∞—Å–∞ –≤–∞–º –ø—Ä–∏–¥–µ—Ç –Ω–æ–º–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å—ã–ª–∫–∏. \n\n‚ÄºÔ∏è –í —Å–ª—É—á–∞–µ –∫–∞–∫–∏—Ö-—Ç–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –ª–∏—á–Ω–æ, –Ω–∞–∂–∞–≤ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ —á–∞—Ç-–±–æ—Ç–∞ <b>‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É</b>'

        markup_inline = types.InlineKeyboardMarkup()

        item = types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏–ª(–∞)', callback_data='pay_yes')
        # item2 = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–∫–∏–Ω–≥ –Ω–æ–º–µ—Ä', callback_data='none')
        item3 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')
        item4 = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É', url='https://t.me/Lunar_room')

        markup_inline.add(item)
        # markup_inline.add(item2)
        markup_inline.add(item3)
        markup_inline.add(item4)

        bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id, media=types.InputMediaPhoto(current_url_sun[0][0], caption=script_one_step, parse_mode='HTML'), reply_markup=markup_inline)

        description = f'–ü–æ–ª—å–∑–æ–≤—Ç–µ–ª—å: \n\n{user_full}–í—ã–±—Ä–∞–ª {current_sun_title} –∏ –≤–≤–µ–ª –∞–¥—Ä–µ—Å: \n\n{adress}'

        bot.edit_message_media(chat_id=-1001976282334, message_id=current_message_admin_id, media=types.InputMediaPhoto(current_url_sun[0][0], caption=description, parse_mode='HTML'))

    if step == 'pay_yes':

        user1 = get_user(message.from_user.id)

        adress = user1[0][4]

        script_one_step = f'üéÅ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π <b>{current_sun_title}</b>! \n\n–í —Ç–µ—á–µ–Ω–∏–∏ –ø–æ–ª—É—á–∞—Å–∞ —è –æ—Ñ–æ—Ä–º–ª—é –ø–æ—Å—ã–ª–∫—É –ø–æ –∞–¥—Ä–µ—Å—É: \n\n<b>{adress}</b>\n\n–∏ –≤—ã—à–ª—é –≤–∞–º —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä. –û–∂–∏–¥–∞–π—Ç–µ.'

        markup_inline = types.InlineKeyboardMarkup()

        # item = types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏–ª(–∞)', callback_data='pay_yes')
        # item2 = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–∫–∏–Ω–≥ –Ω–æ–º–µ—Ä', callback_data='none')
        item3 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')
        item4 = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É', url='https://t.me/Lunar_room')
        # item5 = types.InlineKeyboardButton(text='üì¶ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä', callback_data='check_track')

        markup_inline.add(item3)
        # markup_inline.add(item2)
        markup_inline.add(item4)
        # markup_inline.add(item5)

        bot.edit_message_media(chat_id=message.from_user.id, message_id=current_message_id, media=types.InputMediaPhoto(current_url_sun[0][0], caption=script_one_step, parse_mode='HTML'), reply_markup=markup_inline)

        
        markup_inline2 = types.InlineKeyboardMarkup()
        item_user = types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç—Ä–µ–∫ –Ω–æ–º–µ—Ä', callback_data='send_track')
        markup_inline2.add(item_user)
        description = f'–ü–æ–ª—å–∑–æ–≤—Ç–µ–ª—å: \n\n{user_full}–í—ã–±—Ä–∞–ª {current_sun_title} –∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –û–ü–õ–ê–¢–ò–õ(A)'

        msg = bot.edit_message_media(chat_id=-1001976282334, message_id=current_message_admin_id, media=types.InputMediaPhoto(current_url_sun[0][0], caption=f'{description}\n\n –û—Ç–ø—Ä–∞–≤—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä, —É–∫–∞–∑–∞–≤ –≤–Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è id, –Ω–∞–ø—Ä–∏–º–µ—Ä: 24352345, —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è - 313543:', parse_mode='HTML'))

        bot.register_next_step_handler(msg, send_track)


def send_track(message):
    str = message.text
    id = str.partition(',')[0]
    track_number = str.partition(',')[2]

    order = {}

    current_data = get_current_state(id)

    catalog = get_suncather_catalog(current_data[2])

    current_message_id = current_data[4]
    current_number_sun = current_data[1]
    current_message_id = current_data[4]

    current_sun_id = catalog[current_number_sun][0]
    current_sun_title = catalog[current_number_sun][1]
    current_url_sun = get_url_suncatcher(current_sun_id)
    current_sun_price = catalog[current_number_sun][3]


    markup_inline = types.InlineKeyboardMarkup()

    item3 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')
    item4 = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É', url='https://t.me/Lunar_room')

    markup_inline.add(item3)
    markup_inline.add(item4)

    # bot.send_message(user['id'], text=f'–í —á–∞—Ç-–±–æ—Ç–µ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –≤–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞. \n\n–ù–∞–∂–º–∏—Ç–µ /start')

    msg = bot.send_photo(id, current_url_sun[0][0], caption=f'–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! \n\n–í–∞—à —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä:<b>{track_number}</b>', reply_markup=markup_inline, parse_mode='HTML')

    print('dddddd', msg)

    bot.delete_message(id, current_message_id)

    update_current_state(msg, type='start')

    order_data = get_order(id)[0]

    order['order_user_id'] = order_data[0]
    order['date'] = order_data[1]
    order['suncatcher_id'] = order_data[2]
    order['payment_status'] = 'true'
    order['track_number'] = track_number
    order['delivered_status'] = 'in transit'
    order['step_order'] = 'finish'

    update_order(order)


@bot.message_handler(commands=['start'])
def start(message):

    try:
        delete_message(message, type='photo')
    except:
        print('oops1')

    try:
        delete_message(message, type='media_and_text')
    except:
        print('oops1')

    update_table_press_start(message.from_user.id)

    update_table_user(message)

    bot.delete_message(message.from_user.id, message.message_id)

    user_name = message.from_user.first_name if message.from_user.first_name else message.from_user.username

    text_message = f'‚ú® –ü—Ä–∏–≤–µ—Ç, {user_name}! \n\nüåà –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–∫–∞—Ç–∞–ª–æ–≥</b> —Å –ª–æ–≤—Ü–∞–º–∏ —Å–æ–ª–Ω—Ü–∞! \n\n‚úÖ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–¥–µ—Å—å –Ω–∞–ª–∏—á–∏–µ.\n\n‚ÄºÔ∏è –ê –µ—Å–ª–∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Ü–≤–µ—Ç–æ—á–Ω—É—é –ª—É–Ω—É –ø–æ –¥—É—à–µ, —Ç–æ —á–∞—Ç-–±–æ—Ç –ø—Ä–∏—à–ª—ë—Ç –≤–∞–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, –∫–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –ª–æ–≤–µ—Ü —Å–æ–ª–Ω—Ü–∞.'

    url_photo = Path("suncatcher/admin_file/oksa.jpg")
    img = open(url_photo, 'rb')
    markup_inline = types.InlineKeyboardMarkup()
    item1 = types.InlineKeyboardButton(text='‚ú® –ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')
    item4 = types.InlineKeyboardButton(text='‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –º–∞—Å—Ç–µ—Ä—É', url='https://t.me/Lunar_room')
    
    markup_inline.add(item1)
    markup_inline.add(item4)

    msg = bot.send_photo(message.from_user.id, img, caption=text_message, reply_markup=markup_inline, parse_mode='HTML')
    
    update_current_state(msg, type='start')

# –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ file_id
#     img_list = []
#     img_list.append(types.InputMediaPhoto('AgACAgIAAxkDAAIkWGRffWPqBs072UfzyHs0L8YXXN2kAAKMxzEbTwfpSmHSqPFF3PHiAQADAgADcwADLwQ'))
#     bot.send_media_group(message.from_user.id, img_list)

    
@bot.message_handler(commands=['—Å–æ–∑–¥–∞—Ç—å_—Ç–∞–±–ª–∏—Ü—ã'])
def start(message):
    if message.from_user.id == 257930228:
        create_table_all()
        update_patch()
        print('admin —Å–æ–∑–¥–∞–ª –∏ –æ–±–Ω–æ–≤–∏–ª –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã')


@bot.callback_query_handler(func=lambda m: True)
def callback_choice(message):
    t = message.data

    if t == 'catalog':
        update_user_path(message, catalog='catalog')
        update_current_state(message, type='catalog')
        show_catalog(message)

    if t == 'catalog1':
        update_user_path(message, catalog='catalog')
        update_current_state(message, type='catalog')
        show_catalog(message, step_pre='media')

    if t == 'big':
        update_user_path(message, catalog='big')
        update_current_state(message, type='big')
        show_choose_size_suncatcher_db(message, t)

    if t == 'mid':
        update_user_path(message, catalog='mid')
        update_current_state(message, type='mid')
        show_choose_size_suncatcher_db(message, t)

    if t == 'low':
        update_user_path(message, catalog='low')
        update_current_state(message, type='low')
        show_choose_size_suncatcher_db(message, t)

    if t == 'next':
        current = get_current_state(message.from_user.id)
        update_current_state(message, type='next')
        show_choose_size_suncatcher_db(message, size=current[2])

    if t == 'back':
        current = get_current_state(message.from_user.id)
        update_current_state(message, type='back')
        show_choose_size_suncatcher_db(message, size=current[2])

    if t == 'more':
        current = get_current_state(message.from_user.id)
        show_choose_size_suncatcher_db_more(message, size=current[2])

    if t == 'choose':
        current = get_current_state(message.from_user.id)
        choose(message, size=current[2])

# –ö–æ–≥–¥–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã –∫–∞—Ä—Ç–∏–Ω–æ–∫, –º–µ—Ç–æ–¥ edit_message –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç. –ü–æ—ç—Ç–æ–º—É –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤–æ–µ. –≠—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º step_pre.
    if t == 'choose1':
        current = get_current_state(message.from_user.id)
        choose(message, size=current[2], step_pre='media')

    if t == 'back1':
        current = get_current_state(message.from_user.id)
        show_choose_size_suncatcher_db(message, size=current[2], step_pre='media')

    if t == 'back2':
        current = get_current_state(message.from_user.id)
        show_choose_size_suncatcher_db(message, size=current[2])

    if t == 'orderbot':
        current = get_current_state(message.from_user.id)
        order_sun_via_bot(message, step=t, size=current[2])

    if t == 'forme':
        current = get_current_state(message.from_user.id)
        order_sun_via_bot(message, step=t, size=current[2])

    if t == 'forgift':
        current = get_current_state(message.from_user.id)
        order_sun_via_bot(message, step=t, size=current[2])

    if t == 'input_adress':
        current = get_current_state(message.from_user.id)
        order_sun_via_bot(message, step=t, size=current[2])

    if t == 'pay_yes':
        current = get_current_state(message.from_user.id)
        order_sun_via_bot(message, step=t, size=current[2])

    if t == 'send_track':
        send_track()


bot.infinity_polling()


def main():
    pass


if __name__ == '__main__':
    main()